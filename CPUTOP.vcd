$version Generated by VerilatedVcd $end
$date Thu Dec  5 20:46:46 2024 $end
$timescale 1ps $end

 $scope module TOP $end
  $var wire 32 4! a0 [31:0] $end
  $var wire  1 2! clk $end
  $var wire  1 3! rst $end
  $scope module CPUTOP $end
   $var wire  4 g ALUControl_D [3:0] $end
   $var wire  4 + ALUControl_E [3:0] $end
   $var wire 32 u ALUResult_E [31:0] $end
   $var wire 32 { ALUResult_M [31:0] $end
   $var wire 32 { ALUResult_M_out [31:0] $end
   $var wire 32 = ALUResult_W [31:0] $end
   $var wire  1 e ALUSrcA_D $end
   $var wire  1 ) ALUSrcA_E $end
   $var wire  1 f ALUSrcB_D $end
   $var wire  1 * ALUSrcB_E $end
   $var wire  3 k Branch_D [2:0] $end
   $var wire  3 . Branch_E [2:0] $end
   $var wire 32 m ImmExt_D [31:0] $end
   $var wire 32 0 ImmExt_E [31:0] $end
   $var wire 32 b Instr_D [31:0] $end
   $var wire 32 a Instr_F [31:0] $end
   $var wire  2 l Jump_D [1:0] $end
   $var wire  2 / Jump_E [1:0] $end
   $var wire  1 j LoadSign_D $end
   $var wire  1 - LoadSign_E $end
   $var wire  1 - LoadSign_E_out $end
   $var wire  1 9 LoadSign_M $end
   $var wire  1 d MemWrite_D $end
   $var wire  1 r MemWrite_E $end
   $var wire  1 r MemWrite_E_out $end
   $var wire  1 y MemWrite_M $end
   $var wire 32 u PCJALR_E [31:0] $end
   $var wire 32 ' PCPlus4_D [31:0] $end
   $var wire 32 ' PCPlus4_D_out [31:0] $end
   $var wire 32 5 PCPlus4_E [31:0] $end
   $var wire 32 5 PCPlus4_E_out [31:0] $end
   $var wire 32 ` PCPlus4_F [31:0] $end
   $var wire 32 : PCPlus4_M [31:0] $end
   $var wire 32 : PCPlus4_M_out [31:0] $end
   $var wire 32 > PCPlus4_W [31:0] $end
   $var wire  2 w PCSrc_E [1:0] $end
   $var wire 32 7 PCTarget_E [31:0] $end
   $var wire 32 ( PC_D [31:0] $end
   $var wire 32 ( PC_D_out [31:0] $end
   $var wire 32 6 PC_E [31:0] $end
   $var wire 32 _ PC_F [31:0] $end
   $var wire 32 5! RD1_D [31:0] $end
   $var wire 32 1 RD1_E [31:0] $end
   $var wire 32 6! RD2_D [31:0] $end
   $var wire 32 2 RD2_E [31:0] $end
   $var wire 32 ~ ReadData_M [31:0] $end
   $var wire 32 < ReadData_W [31:0] $end
   $var wire  1 c RegWrite_D $end
   $var wire  1 q RegWrite_E $end
   $var wire  1 q RegWrite_E_out $end
   $var wire  1 x RegWrite_M $end
   $var wire  1 x RegWrite_M_out $end
   $var wire  1 !! RegWrite_W $end
   $var wire  1 !! RegWrite_W_out $end
   $var wire  2 h ResultSrc_D [1:0] $end
   $var wire  2 , ResultSrc_E [1:0] $end
   $var wire  2 , ResultSrc_E_out [1:0] $end
   $var wire  2 8 ResultSrc_M [1:0] $end
   $var wire  2 8 ResultSrc_M_out [1:0] $end
   $var wire  2 ; ResultSrc_W [1:0] $end
   $var wire 32 #! Result_W [31:0] $end
   $var wire  2 i SizeSrc_D [1:0] $end
   $var wire  2 s SizeSrc_E [1:0] $end
   $var wire  2 s SizeSrc_E_out [1:0] $end
   $var wire  2 z SizeSrc_M [1:0] $end
   $var wire 32 v WriteData_E [31:0] $end
   $var wire 32 | WriteData_M [31:0] $end
   $var wire 32 4! a0 [31:0] $end
   $var wire  1 2! clk $end
   $var wire  5 p rd_D [4:0] $end
   $var wire  5 t rd_E [4:0] $end
   $var wire  5 t rd_E_out [4:0] $end
   $var wire  5 } rd_M [4:0] $end
   $var wire  5 } rd_M_out [4:0] $end
   $var wire  5 "! rd_W [4:0] $end
   $var wire  5 "! rd_W_out [4:0] $end
   $var wire  5 n rs1_D [4:0] $end
   $var wire  5 3 rs1_E [4:0] $end
   $var wire  5 o rs2_D [4:0] $end
   $var wire  5 4 rs2_E [4:0] $end
   $var wire  1 3! rst $end
   $scope module EXTop $end
    $var wire  4 + ALUControl_E [3:0] $end
    $var wire 32 &! ALUInputA_E [31:0] $end
    $var wire 32 '! ALUInputB_E [31:0] $end
    $var wire 32 u ALUResult_E [31:0] $end
    $var wire 32 { ALUResult_M [31:0] $end
    $var wire  1 ) ALUSrcA_E $end
    $var wire  1 * ALUSrcB_E $end
    $var wire  3 . Branch_E [2:0] $end
    $var wire 32 7! ForwardAData_E [31:0] $end
    $var wire  2 $! ForwardA_E [1:0] $end
    $var wire 32 v ForwardBData_E [31:0] $end
    $var wire  2 %! ForwardB_E [1:0] $end
    $var wire 32 0 ImmExt_E [31:0] $end
    $var wire  2 / Jump_E [1:0] $end
    $var wire  1 - LoadSign_E $end
    $var wire  1 - LoadSign_E_out $end
    $var wire  1 r MemWrite_E $end
    $var wire  1 r MemWrite_E_out $end
    $var wire 32 u PCJALR_E [31:0] $end
    $var wire 32 5 PCPlus4_E [31:0] $end
    $var wire 32 5 PCPlus4_E_out [31:0] $end
    $var wire  2 w PCSrc_E [1:0] $end
    $var wire 32 7 PCTarget_E [31:0] $end
    $var wire 32 6 PC_E [31:0] $end
    $var wire 32 1 RD1_E [31:0] $end
    $var wire 32 2 RD2_E [31:0] $end
    $var wire  1 q RegWrite_E $end
    $var wire  1 q RegWrite_E_out $end
    $var wire  1 x RegWrite_M $end
    $var wire  1 !! RegWrite_W_out $end
    $var wire  2 , ResultSrc_E [1:0] $end
    $var wire  2 , ResultSrc_E_out [1:0] $end
    $var wire 32 #! Result_W [31:0] $end
    $var wire  2 s SizeSrc_E [1:0] $end
    $var wire  2 s SizeSrc_E_out [1:0] $end
    $var wire 32 v WriteData_E [31:0] $end
    $var wire  1 (! Zero_E $end
    $var wire  1 2! clk $end
    $var wire  5 t rd_E [4:0] $end
    $var wire  5 t rd_E_out [4:0] $end
    $var wire  5 } rd_M [4:0] $end
    $var wire  5 "! rd_W_out [4:0] $end
    $var wire  5 3 rs1_E [4:0] $end
    $var wire  5 4 rs2_E [4:0] $end
    $var wire  1 3! rst $end
    $var wire  1 *! signedLess_E $end
    $var wire  1 )! unsignedLess_E $end
    $scope module ALU $end
     $var wire  4 + ALUControl_E [3:0] $end
     $var wire 32 u ALUResult_E [31:0] $end
     $var wire 32 &! SrcA_E [31:0] $end
     $var wire 32 '! SrcB_E [31:0] $end
     $var wire  1 (! Zero_E $end
     $var wire  1 *! signedLess_E $end
     $var wire  1 )! unsignedLess_E $end
    $upscope $end
    $scope module ALUMux1 $end
     $var wire  1 ) ALUSrcA_E $end
     $var wire 32 6 PC_E [31:0] $end
     $var wire 32 7! RD1_E [31:0] $end
     $var wire 32 &! SrcA_E [31:0] $end
    $upscope $end
    $scope module ALUMux2 $end
     $var wire  1 * ALUSrcB_E $end
     $var wire 32 0 ImmExt_E [31:0] $end
     $var wire 32 v RD2_E [31:0] $end
     $var wire 32 '! SrcB_E [31:0] $end
    $upscope $end
    $scope module ForwardingUnit $end
     $var wire  2 $! ForwardA_E [1:0] $end
     $var wire  2 %! ForwardB_E [1:0] $end
     $var wire  1 x RegWrite_M $end
     $var wire  1 !! RegWrite_W_out $end
     $var wire  5 } rd_M [4:0] $end
     $var wire  5 "! rd_W_out [4:0] $end
     $var wire  5 3 rs1_E [4:0] $end
     $var wire  5 4 rs2_E [4:0] $end
    $upscope $end
    $scope module PCSrcMUX $end
     $var wire  3 . Branch_E [2:0] $end
     $var wire  2 / Jump_E [1:0] $end
     $var wire  2 w PCSrc_E [1:0] $end
     $var wire  1 (! Zero_E $end
     $var wire  1 *! signedLess_E $end
     $var wire  1 )! unsignedLess_E $end
    $upscope $end
   $upscope $end
   $scope module EX_MEM_Reg $end
    $var wire 32 u ALUResult_E [31:0] $end
    $var wire 32 { ALUResult_M [31:0] $end
    $var wire  1 - LoadSign_E_out $end
    $var wire  1 9 LoadSign_M $end
    $var wire  1 r MemWrite_E_out $end
    $var wire  1 y MemWrite_M $end
    $var wire 32 5 PCPlus4_E_out [31:0] $end
    $var wire 32 : PCPlus4_M [31:0] $end
    $var wire  1 q RegWrite_E_out $end
    $var wire  1 x RegWrite_M $end
    $var wire  2 , ResultSrc_E_out [1:0] $end
    $var wire  2 8 ResultSrc_M [1:0] $end
    $var wire  2 s SizeSrc_E_out [1:0] $end
    $var wire  2 z SizeSrc_M [1:0] $end
    $var wire 32 v WriteData_E [31:0] $end
    $var wire 32 | WriteData_M [31:0] $end
    $var wire  1 2! clk $end
    $var wire  5 t rd_E_out [4:0] $end
    $var wire  5 } rd_M [4:0] $end
    $var wire  1 3! rst $end
   $upscope $end
   $scope module IDTop $end
    $var wire  4 g ALUControl_D [3:0] $end
    $var wire  1 e ALUSrcA_D $end
    $var wire  1 f ALUSrcB_D $end
    $var wire  3 k Branch_D [2:0] $end
    $var wire 32 m ImmExt_D [31:0] $end
    $var wire 25 ,! ImmIn_D [31:7] $end
    $var wire  3 /! ImmSrc_D [2:0] $end
    $var wire 32 b Instr_D [31:0] $end
    $var wire  2 l Jump_D [1:0] $end
    $var wire  1 j LoadSign_D $end
    $var wire  1 d MemWrite_D $end
    $var wire 32 ' PCPlus4_D [31:0] $end
    $var wire 32 ' PCPlus4_D_out [31:0] $end
    $var wire 32 ( PC_D [31:0] $end
    $var wire 32 ( PC_D_out [31:0] $end
    $var wire 32 5! RD1_D [31:0] $end
    $var wire 32 6! RD2_D [31:0] $end
    $var wire  1 c RegWrite_D $end
    $var wire  1 !! RegWrite_W_out $end
    $var wire  2 h ResultSrc_D [1:0] $end
    $var wire 32 #! Result_W [31:0] $end
    $var wire  2 i SizeSrc_D [1:0] $end
    $var wire 32 4! a0 [31:0] $end
    $var wire  1 2! clk $end
    $var wire  3 -! funct3_D [2:0] $end
    $var wire  7 .! funct7_D [6:0] $end
    $var wire  7 +! op_D [6:0] $end
    $var wire  5 p rd_D [4:0] $end
    $var wire  5 "! rd_W_out [4:0] $end
    $var wire  5 n rs1_D [4:0] $end
    $var wire  5 o rs2_D [4:0] $end
    $var wire  1 3! rst $end
    $scope module ControlUnit $end
     $var wire  4 g ALUControl_D [3:0] $end
     $var wire  1 e ALUSrcA_D $end
     $var wire  1 f ALUSrcB_D $end
     $var wire  3 k Branch_D [2:0] $end
     $var wire  3 /! ImmSrc_D [2:0] $end
     $var wire  2 l Jump_D [1:0] $end
     $var wire  1 j LoadSign_D $end
     $var wire  1 d MemWrite_D $end
     $var wire  1 c RegWrite_D $end
     $var wire  2 h ResultSrc_D [1:0] $end
     $var wire  2 i SizeSrc_D [1:0] $end
     $var wire  3 -! funct3_D [2:0] $end
     $var wire  7 .! funct7_D [6:0] $end
     $var wire  7 +! op_D [6:0] $end
    $upscope $end
    $scope module Extend $end
     $var wire 32 m ImmExt_D [31:0] $end
     $var wire 25 ,! ImmIn_D [31:7] $end
     $var wire  3 /! ImmSrc_D [2:0] $end
    $upscope $end
    $scope module RegisterFile $end
     $var wire  5 n A1_D [4:0] $end
     $var wire  5 o A2_D [4:0] $end
     $var wire  5 "! A3_W [4:0] $end
     $var wire 32 5! RD1_D [31:0] $end
     $var wire 32 6! RD2_D [31:0] $end
     $var wire 32 #! WD3_W [31:0] $end
     $var wire  1 !! WE3_W $end
     $var wire 32 4! a0 [31:0] $end
     $var wire  1 2! clk $end
     $var wire 32 ? registerarr[0] [31:0] $end
     $var wire 32 I registerarr[10] [31:0] $end
     $var wire 32 J registerarr[11] [31:0] $end
     $var wire 32 K registerarr[12] [31:0] $end
     $var wire 32 L registerarr[13] [31:0] $end
     $var wire 32 M registerarr[14] [31:0] $end
     $var wire 32 N registerarr[15] [31:0] $end
     $var wire 32 O registerarr[16] [31:0] $end
     $var wire 32 P registerarr[17] [31:0] $end
     $var wire 32 Q registerarr[18] [31:0] $end
     $var wire 32 R registerarr[19] [31:0] $end
     $var wire 32 @ registerarr[1] [31:0] $end
     $var wire 32 S registerarr[20] [31:0] $end
     $var wire 32 T registerarr[21] [31:0] $end
     $var wire 32 U registerarr[22] [31:0] $end
     $var wire 32 V registerarr[23] [31:0] $end
     $var wire 32 W registerarr[24] [31:0] $end
     $var wire 32 X registerarr[25] [31:0] $end
     $var wire 32 Y registerarr[26] [31:0] $end
     $var wire 32 Z registerarr[27] [31:0] $end
     $var wire 32 [ registerarr[28] [31:0] $end
     $var wire 32 \ registerarr[29] [31:0] $end
     $var wire 32 A registerarr[2] [31:0] $end
     $var wire 32 ] registerarr[30] [31:0] $end
     $var wire 32 ^ registerarr[31] [31:0] $end
     $var wire 32 B registerarr[3] [31:0] $end
     $var wire 32 C registerarr[4] [31:0] $end
     $var wire 32 D registerarr[5] [31:0] $end
     $var wire 32 E registerarr[6] [31:0] $end
     $var wire 32 F registerarr[7] [31:0] $end
     $var wire 32 G registerarr[8] [31:0] $end
     $var wire 32 H registerarr[9] [31:0] $end
    $upscope $end
   $upscope $end
   $scope module ID_EX_Reg $end
    $var wire  4 g ALUControl_D [3:0] $end
    $var wire  4 + ALUControl_E [3:0] $end
    $var wire  1 e ALUSrcA_D $end
    $var wire  1 ) ALUSrcA_E $end
    $var wire  1 f ALUSrcB_D $end
    $var wire  1 * ALUSrcB_E $end
    $var wire  3 k Branch_D [2:0] $end
    $var wire  3 . Branch_E [2:0] $end
    $var wire 32 m ImmExt_D [31:0] $end
    $var wire 32 0 ImmExt_E [31:0] $end
    $var wire  2 l Jump_D [1:0] $end
    $var wire  2 / Jump_E [1:0] $end
    $var wire  1 j LoadSign_D $end
    $var wire  1 - LoadSign_E $end
    $var wire  1 d MemWrite_D $end
    $var wire  1 r MemWrite_E $end
    $var wire 32 ' PCPlus4_D_out [31:0] $end
    $var wire 32 5 PCPlus4_E [31:0] $end
    $var wire 32 ( PC_D_out [31:0] $end
    $var wire 32 6 PC_E [31:0] $end
    $var wire 32 5! RD1_D [31:0] $end
    $var wire 32 1 RD1_E [31:0] $end
    $var wire 32 6! RD2_D [31:0] $end
    $var wire 32 2 RD2_E [31:0] $end
    $var wire  1 c RegWrite_D $end
    $var wire  1 q RegWrite_E $end
    $var wire  2 h ResultSrc_D [1:0] $end
    $var wire  2 , ResultSrc_E [1:0] $end
    $var wire  2 i SizeSrc_D [1:0] $end
    $var wire  2 s SizeSrc_E [1:0] $end
    $var wire  1 2! clk $end
    $var wire  5 p rd_D [4:0] $end
    $var wire  5 t rd_E [4:0] $end
    $var wire  5 n rs1_D [4:0] $end
    $var wire  5 3 rs1_E [4:0] $end
    $var wire  5 o rs2_D [4:0] $end
    $var wire  5 4 rs2_E [4:0] $end
    $var wire  1 3! rst $end
   $upscope $end
   $scope module IFTop $end
    $var wire 32 a Instr_F [31:0] $end
    $var wire 32 u PCJALR_E [31:0] $end
    $var wire 32 8! PCNext_F [31:0] $end
    $var wire 32 ` PCPlus4_F [31:0] $end
    $var wire  2 w PCSrc_E [1:0] $end
    $var wire 32 7 PCTarget_E [31:0] $end
    $var wire 32 _ PC_F [31:0] $end
    $var wire  1 2! clk $end
    $var wire  1 3! rst $end
    $scope module HexFileLoader $end
     $scope module unnamedblk1 $end
      $var wire 32 & addr [31:0] $end
      $var wire 32 # file [31:0] $end
      $var wire 32 % instr_word [31:0] $end
      $var wire 32 $ r [31:0] $end
     $upscope $end
    $upscope $end
    $scope module InstructionMemory $end
     $var wire 32 a Instr_F [31:0] $end
     $var wire 32 _ PC_F [31:0] $end
     $var wire  1 0! ValidAddr $end
    $upscope $end
    $scope module PCMux $end
     $var wire 32 u PCJALR_E [31:0] $end
     $var wire 32 8! PCNext_F [31:0] $end
     $var wire 32 ` PCPlus4_F [31:0] $end
     $var wire  2 w PCSrc_E [1:0] $end
     $var wire 32 7 PCTarget_E [31:0] $end
    $upscope $end
    $scope module PCReg $end
     $var wire 32 8! PCNext_F [31:0] $end
     $var wire 32 _ PC_F [31:0] $end
     $var wire  1 2! clk $end
     $var wire  1 3! rst $end
    $upscope $end
   $upscope $end
   $scope module IF_ID_Reg $end
    $var wire 32 b Instr_D [31:0] $end
    $var wire 32 a Instr_F [31:0] $end
    $var wire 32 ' PCPlus4_D [31:0] $end
    $var wire 32 ` PCPlus4_F [31:0] $end
    $var wire 32 ( PC_D [31:0] $end
    $var wire 32 _ PC_F [31:0] $end
    $var wire  1 2! clk $end
    $var wire  1 3! rst $end
   $upscope $end
   $scope module MEMTop $end
    $var wire 32 { ALUResult_M [31:0] $end
    $var wire 32 { ALUResult_M_out [31:0] $end
    $var wire  1 9 LoadSign_M $end
    $var wire  1 y MemWrite_M $end
    $var wire 32 : PCPlus4_M [31:0] $end
    $var wire 32 : PCPlus4_M_out [31:0] $end
    $var wire 32 ~ ReadData_M [31:0] $end
    $var wire  1 x RegWrite_M $end
    $var wire  1 x RegWrite_M_out $end
    $var wire  2 8 ResultSrc_M [1:0] $end
    $var wire  2 8 ResultSrc_M_out [1:0] $end
    $var wire  2 z SizeSrc_M [1:0] $end
    $var wire 32 | WriteData_M [31:0] $end
    $var wire  1 2! clk $end
    $var wire  5 } rd_M [4:0] $end
    $var wire  5 } rd_M_out [4:0] $end
    $var wire  1 3! rst $end
    $scope module DataMemory $end
     $var wire 32 { ALUResult [31:0] $end
     $var wire  1 9 LoadSign $end
     $var wire  1 y MemWrite $end
     $var wire 32 ~ ReadData [31:0] $end
     $var wire  2 z SizeSrc [1:0] $end
     $var wire 32 | WriteData [31:0] $end
     $var wire 17 1! address [16:0] $end
     $var wire  1 2! clk $end
    $upscope $end
   $upscope $end
   $scope module MEM_WB_Reg $end
    $var wire 32 { ALUResult_M_out [31:0] $end
    $var wire 32 = ALUResult_W [31:0] $end
    $var wire 32 : PCPlus4_M_out [31:0] $end
    $var wire 32 > PCPlus4_W [31:0] $end
    $var wire 32 ~ ReadData_M [31:0] $end
    $var wire 32 < ReadData_W [31:0] $end
    $var wire  1 x RegWrite_M_out $end
    $var wire  1 !! RegWrite_W $end
    $var wire  2 8 ResultSrc_M_out [1:0] $end
    $var wire  2 ; ResultSrc_W [1:0] $end
    $var wire  1 2! clk $end
    $var wire  5 } rd_M_out [4:0] $end
    $var wire  5 "! rd_W [4:0] $end
    $var wire  1 3! rst $end
   $upscope $end
   $scope module WBTop $end
    $var wire 32 = ALUResult_W [31:0] $end
    $var wire 32 > PCPlus4_W [31:0] $end
    $var wire 32 < ReadData_W [31:0] $end
    $var wire  1 !! RegWrite_W $end
    $var wire  1 !! RegWrite_W_out $end
    $var wire  2 ; ResultSrc_W [1:0] $end
    $var wire 32 #! Result_W [31:0] $end
    $var wire  5 "! rd_W [4:0] $end
    $var wire  5 "! rd_W_out [4:0] $end
    $scope module ALUMux3 $end
     $var wire 32 = ALUResult_W [31:0] $end
     $var wire 32 > PCPlus4_W [31:0] $end
     $var wire 32 < ReadData_W [31:0] $end
     $var wire  2 ; ResultSrc_W [1:0] $end
     $var wire 32 #! Result_W [31:0] $end
    $upscope $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b00000000000000000000000000000000 #
b00000000000000000000000000000000 $
b00000000000000000000000000000000 %
b00000000000000000000000000000000 &
b00000000000000000000000000000000 '
b00000000000000000000000000000000 (
0)
0*
b0000 +
b00 ,
0-
b000 .
b00 /
b00000000000000000000000000000000 0
b00000000000000000000000000000000 1
b00000000000000000000000000000000 2
b00000 3
b00000 4
b00000000000000000000000000000000 5
b00000000000000000000000000000000 6
b00000000000000000000000000000000 7
b00 8
09
b00000000000000000000000000000000 :
b00 ;
b00000000000000000000000000000000 <
b00000000000000000000000000000000 =
b00000000000000000000000000000000 >
b00000000000000000000000000000000 ?
b00000000000000000000000000000000 @
b00000000000000000000000000000000 A
b00000000000000000000000000000000 B
b00000000000000000000000000000000 C
b00000000000000000000000000000000 D
b00000000000000000000000000000000 E
b00000000000000000000000000000000 F
b00000000000000000000000000000000 G
b00000000000000000000000000000000 H
b00000000000000000000000000000000 I
b00000000000000000000000000000000 J
b00000000000000000000000000000000 K
b00000000000000000000000000000000 L
b00000000000000000000000000000000 M
b00000000000000000000000000000000 N
b00000000000000000000000000000000 O
b00000000000000000000000000000000 P
b00000000000000000000000000000000 Q
b00000000000000000000000000000000 R
b00000000000000000000000000000000 S
b00000000000000000000000000000000 T
b00000000000000000000000000000000 U
b00000000000000000000000000000000 V
b00000000000000000000000000000000 W
b00000000000000000000000000000000 X
b00000000000000000000000000000000 Y
b00000000000000000000000000000000 Z
b00000000000000000000000000000000 [
b00000000000000000000000000000000 \
b00000000000000000000000000000000 ]
b00000000000000000000000000000000 ^
b00000000000000000000000000000000 _
b00000000000000000000000000000100 `
b00000000000000000000000000000000 a
b00000000000000000000000000000000 b
0c
0d
0e
0f
b0000 g
b00 h
b00 i
0j
b000 k
b00 l
b00000000000000000000000000000000 m
b00000 n
b00000 o
b00000 p
0q
0r
b00 s
b00000 t
b00000000000000000000000000000000 u
b00000000000000000000000000000000 v
b00 w
0x
0y
b00 z
b00000000000000000000000000000000 {
b00000000000000000000000000000000 |
b00000 }
b00000000000000000000000000000000 ~
0!!
b00000 "!
b00000000000000000000000000000000 #!
b00 $!
b00 %!
b00000000000000000000000000000000 &!
b00000000000000000000000000000000 '!
0(!
0)!
0*!
b0000000 +!
b0000000000000000000000000 ,!
b000 -!
b0000000 .!
b000 /!
00!
b00000000000000000 1!
02!
03!
b00000000000000000000000000000000 4!
b00000000000000000000000000000000 5!
b00000000000000000000000000000000 6!
b00000000000000000000000000000000 7!
b00000000000000000000000000000100 8!
#1
b00000000000000000000000000000001 $
b00000000010000000000000001101111 %
b00000000000000000000010000000100 &
b10111111110000000000000000000000 _
b10111111110000000000000000000100 `
b00000000000000000000010100010011 a
b1111 g
b010 k
b111 /!
10!
12!
b10111111110000000000000000000100 8!
#2
02!
#3
b10111111110000000000000000000100 '
b10111111110000000000000000000000 (
b1111 +
b010 .
b10111111110000000000000000000100 _
b10111111110000000000000000001000 `
b00000111010000000000000011101111 a
b00000000000000000000010100010011 b
1c
1f
b0000 g
b01010 p
b0010011 +!
b0000000000000000000001010 ,!
b000 /!
12!
b10111111110000000000000000001000 8!
#4
02!
#5
b10111111110000000000000000001000 '
b10111111110000000000000000000100 (
1*
b0000 +
b10111111110000000000000000000100 5
b10111111110000000000000000000000 6
b10111111110000000000000000000000 7
b10111111110000000000000000001000 _
b10111111110000000000000000001100 `
b00001000110000000000000011101111 a
b00000111010000000000000011101111 b
0f
b10 h
b10 l
b00000000000000000000000001110100 m
b10100 o
b00001 p
1q
b01010 t
b1101111 +!
b0000011101000000000000001 ,!
b0000011 .!
b011 /!
12!
b10111111110000000000000000001100 8!
#6
02!
#7
b10111111110000000000000000001100 '
b10111111110000000000000000001000 (
0*
b10 ,
b10 /
b00000000000000000000000001110100 0
b10100 4
b10111111110000000000000000001000 5
b10111111110000000000000000000100 6
b10111111110000000000000001111000 7
b10111111110000000000000000000100 :
b10111111110000000000000000001100 _
b10111111110000000000000000010000 `
b00001010010000000000000011101111 a
b00001000110000000000000011101111 b
b00000000000000000000000010001100 m
b01100 o
b00001 t
b10 w
1x
b01010 }
b0000100011000000000000001 ,!
b0000100 .!
12!
b00000000000000000000000000000000 8!
#8
02!
#9
b10111111110000000000000000010000 '
b10111111110000000000000000001100 (
b00000000000000000000000010001100 0
b01100 4
b10111111110000000000000000001100 5
b10111111110000000000000000001000 6
b10111111110000000000000010010100 7
b10 8
b10111111110000000000000000001000 :
b10111111110000000000000000000100 >
b00000000000000000000000000000000 _
b00000000000000000000000000000100 `
b00000000000000000000000000000000 a
b00001010010000000000000011101111 b
b00000000000000000000000010100100 m
b00100 o
b00001 }
1!!
b01010 "!
b0000101001000000000000001 ,!
b0000101 .!
00!
12!
#10
02!
#11
b00000000000000000000000000000100 '
b00000000000000000000000000000000 (
b00000000000000000000000010100100 0
b00100 4
b10111111110000000000000000010000 5
b10111111110000000000000000001100 6
b10111111110000000000000010110000 7
b10111111110000000000000000001100 :
b10 ;
b10111111110000000000000000001000 >
b00000000000000000000000000000000 b
0c
b1111 g
b00 h
b00 l
b00000000000000000000000000000000 m
b00000 o
b00000 p
b00001 "!
b10111111110000000000000000001000 #!
b0000000 +!
b0000000000000000000000000 ,!
b0000000 .!
b111 /!
12!
#12
02!
#13
b1111 +
b00 ,
b00 /
b00000000000000000000000000000000 0
b00000 4
b00000000000000000000000000000100 5
b00000000000000000000000000000000 6
b00000000000000000000000000000000 7
b10111111110000000000000000010000 :
b10111111110000000000000000001100 >
b10111111110000000000000000001000 @
0q
b00000 t
b00 w
b10111111110000000000000000001100 #!
12!
b00000000000000000000000000000100 8!
#14
02!
#15
b00 8
b00000000000000000000000000000100 :
b10111111110000000000000000010000 >
b10111111110000000000000000001100 @
b00000000000000000000000000000100 _
b00000000000000000000000000001000 `
0x
b00000 }
b10111111110000000000000000010000 #!
12!
b00000000000000000000000000001000 8!
#16
02!
#17
b00000000000000000000000000001000 '
b00000000000000000000000000000100 (
b00 ;
b00000000000000000000000000000100 >
b10111111110000000000000000010000 @
b00000000000000000000000000001000 _
b00000000000000000000000000001100 `
0!!
b00000 "!
b00000000000000000000000000000000 #!
12!
b00000000000000000000000000001100 8!
#18
02!
#19
b00000000000000000000000000001100 '
b00000000000000000000000000001000 (
b00000000000000000000000000001000 5
b00000000000000000000000000000100 6
b00000000000000000000000000000100 7
b00000000000000000000000000001100 _
b00000000000000000000000000010000 `
12!
b00000000000000000000000000010000 8!
#20
02!
#21
b00000000000000000000000000010000 '
b00000000000000000000000000001100 (
b00000000000000000000000000001100 5
b00000000000000000000000000001000 6
b00000000000000000000000000001000 7
b00000000000000000000000000001000 :
b00000000000000000000000000010000 _
b00000000000000000000000000010100 `
12!
b00000000000000000000000000010100 8!
#22
02!
#23
b00000000000000000000000000010100 '
b00000000000000000000000000010000 (
b00000000000000000000000000010000 5
b00000000000000000000000000001100 6
b00000000000000000000000000001100 7
b00000000000000000000000000001100 :
b00000000000000000000000000001000 >
b00000000000000000000000000010100 _
b00000000000000000000000000011000 `
12!
b00000000000000000000000000011000 8!
#24
02!
#25
b00000000000000000000000000011000 '
b00000000000000000000000000010100 (
b00000000000000000000000000010100 5
b00000000000000000000000000010000 6
b00000000000000000000000000010000 7
b00000000000000000000000000010000 :
b00000000000000000000000000001100 >
b00000000000000000000000000011000 _
b00000000000000000000000000011100 `
12!
b00000000000000000000000000011100 8!
#26
02!
#27
b00000000000000000000000000011100 '
b00000000000000000000000000011000 (
b00000000000000000000000000011000 5
b00000000000000000000000000010100 6
b00000000000000000000000000010100 7
b00000000000000000000000000010100 :
b00000000000000000000000000010000 >
b00000000000000000000000000011100 _
b00000000000000000000000000100000 `
12!
b00000000000000000000000000100000 8!
#28
02!
#29
b00000000000000000000000000100000 '
b00000000000000000000000000011100 (
b00000000000000000000000000011100 5
b00000000000000000000000000011000 6
b00000000000000000000000000011000 7
b00000000000000000000000000011000 :
b00000000000000000000000000010100 >
b00000000000000000000000000100000 _
b00000000000000000000000000100100 `
12!
b00000000000000000000000000100100 8!
#30
02!
#31
b00000000000000000000000000100100 '
b00000000000000000000000000100000 (
b00000000000000000000000000100000 5
b00000000000000000000000000011100 6
b00000000000000000000000000011100 7
b00000000000000000000000000011100 :
b00000000000000000000000000011000 >
b00000000000000000000000000100100 _
b00000000000000000000000000101000 `
12!
b00000000000000000000000000101000 8!
#32
02!
#33
b00000000000000000000000000101000 '
b00000000000000000000000000100100 (
b00000000000000000000000000100100 5
b00000000000000000000000000100000 6
b00000000000000000000000000100000 7
b00000000000000000000000000100000 :
b00000000000000000000000000011100 >
b00000000000000000000000000101000 _
b00000000000000000000000000101100 `
12!
b00000000000000000000000000101100 8!
#34
02!
#35
b00000000000000000000000000101100 '
b00000000000000000000000000101000 (
b00000000000000000000000000101000 5
b00000000000000000000000000100100 6
b00000000000000000000000000100100 7
b00000000000000000000000000100100 :
b00000000000000000000000000100000 >
b00000000000000000000000000101100 _
b00000000000000000000000000110000 `
12!
b00000000000000000000000000110000 8!
#36
02!
#37
b00000000000000000000000000110000 '
b00000000000000000000000000101100 (
b00000000000000000000000000101100 5
b00000000000000000000000000101000 6
b00000000000000000000000000101000 7
b00000000000000000000000000101000 :
b00000000000000000000000000100100 >
b00000000000000000000000000110000 _
b00000000000000000000000000110100 `
12!
b00000000000000000000000000110100 8!
#38
02!
#39
b00000000000000000000000000110100 '
b00000000000000000000000000110000 (
b00000000000000000000000000110000 5
b00000000000000000000000000101100 6
b00000000000000000000000000101100 7
b00000000000000000000000000101100 :
b00000000000000000000000000101000 >
b00000000000000000000000000110100 _
b00000000000000000000000000111000 `
12!
b00000000000000000000000000111000 8!
#40
02!
#41
b00000000000000000000000000111000 '
b00000000000000000000000000110100 (
b00000000000000000000000000110100 5
b00000000000000000000000000110000 6
b00000000000000000000000000110000 7
b00000000000000000000000000110000 :
b00000000000000000000000000101100 >
b00000000000000000000000000111000 _
b00000000000000000000000000111100 `
12!
b00000000000000000000000000111100 8!
#42
02!
#43
b00000000000000000000000000111100 '
b00000000000000000000000000111000 (
b00000000000000000000000000111000 5
b00000000000000000000000000110100 6
b00000000000000000000000000110100 7
b00000000000000000000000000110100 :
b00000000000000000000000000110000 >
b00000000000000000000000000111100 _
b00000000000000000000000001000000 `
12!
b00000000000000000000000001000000 8!
#44
02!
#45
b00000000000000000000000001000000 '
b00000000000000000000000000111100 (
b00000000000000000000000000111100 5
b00000000000000000000000000111000 6
b00000000000000000000000000111000 7
b00000000000000000000000000111000 :
b00000000000000000000000000110100 >
b00000000000000000000000001000000 _
b00000000000000000000000001000100 `
12!
b00000000000000000000000001000100 8!
#46
02!
#47
b00000000000000000000000001000100 '
b00000000000000000000000001000000 (
b00000000000000000000000001000000 5
b00000000000000000000000000111100 6
b00000000000000000000000000111100 7
b00000000000000000000000000111100 :
b00000000000000000000000000111000 >
b00000000000000000000000001000100 _
b00000000000000000000000001001000 `
12!
b00000000000000000000000001001000 8!
#48
02!
#49
b00000000000000000000000001001000 '
b00000000000000000000000001000100 (
b00000000000000000000000001000100 5
b00000000000000000000000001000000 6
b00000000000000000000000001000000 7
b00000000000000000000000001000000 :
b00000000000000000000000000111100 >
b00000000000000000000000001001000 _
b00000000000000000000000001001100 `
12!
b00000000000000000000000001001100 8!
#50
02!
#51
b00000000000000000000000001001100 '
b00000000000000000000000001001000 (
b00000000000000000000000001001000 5
b00000000000000000000000001000100 6
b00000000000000000000000001000100 7
b00000000000000000000000001000100 :
b00000000000000000000000001000000 >
b00000000000000000000000001001100 _
b00000000000000000000000001010000 `
12!
b00000000000000000000000001010000 8!
#52
02!
#53
b00000000000000000000000001010000 '
b00000000000000000000000001001100 (
b00000000000000000000000001001100 5
b00000000000000000000000001001000 6
b00000000000000000000000001001000 7
b00000000000000000000000001001000 :
b00000000000000000000000001000100 >
b00000000000000000000000001010000 _
b00000000000000000000000001010100 `
12!
b00000000000000000000000001010100 8!
#54
02!
#55
b00000000000000000000000001010100 '
b00000000000000000000000001010000 (
b00000000000000000000000001010000 5
b00000000000000000000000001001100 6
b00000000000000000000000001001100 7
b00000000000000000000000001001100 :
b00000000000000000000000001001000 >
b00000000000000000000000001010100 _
b00000000000000000000000001011000 `
12!
b00000000000000000000000001011000 8!
#56
02!
#57
b00000000000000000000000001011000 '
b00000000000000000000000001010100 (
b00000000000000000000000001010100 5
b00000000000000000000000001010000 6
b00000000000000000000000001010000 7
b00000000000000000000000001010000 :
b00000000000000000000000001001100 >
b00000000000000000000000001011000 _
b00000000000000000000000001011100 `
12!
b00000000000000000000000001011100 8!
#58
02!
#59
b00000000000000000000000001011100 '
b00000000000000000000000001011000 (
b00000000000000000000000001011000 5
b00000000000000000000000001010100 6
b00000000000000000000000001010100 7
b00000000000000000000000001010100 :
b00000000000000000000000001010000 >
b00000000000000000000000001011100 _
b00000000000000000000000001100000 `
12!
b00000000000000000000000001100000 8!
#60
02!
#61
b00000000000000000000000001100000 '
b00000000000000000000000001011100 (
b00000000000000000000000001011100 5
b00000000000000000000000001011000 6
b00000000000000000000000001011000 7
b00000000000000000000000001011000 :
b00000000000000000000000001010100 >
b00000000000000000000000001100000 _
b00000000000000000000000001100100 `
12!
b00000000000000000000000001100100 8!
#62
02!
#63
b00000000000000000000000001100100 '
b00000000000000000000000001100000 (
b00000000000000000000000001100000 5
b00000000000000000000000001011100 6
b00000000000000000000000001011100 7
b00000000000000000000000001011100 :
b00000000000000000000000001011000 >
b00000000000000000000000001100100 _
b00000000000000000000000001101000 `
12!
b00000000000000000000000001101000 8!
#64
02!
#65
b00000000000000000000000001101000 '
b00000000000000000000000001100100 (
b00000000000000000000000001100100 5
b00000000000000000000000001100000 6
b00000000000000000000000001100000 7
b00000000000000000000000001100000 :
b00000000000000000000000001011100 >
b00000000000000000000000001101000 _
b00000000000000000000000001101100 `
12!
b00000000000000000000000001101100 8!
#66
02!
#67
b00000000000000000000000001101100 '
b00000000000000000000000001101000 (
b00000000000000000000000001101000 5
b00000000000000000000000001100100 6
b00000000000000000000000001100100 7
b00000000000000000000000001100100 :
b00000000000000000000000001100000 >
b00000000000000000000000001101100 _
b00000000000000000000000001110000 `
12!
b00000000000000000000000001110000 8!
#68
02!
#69
b00000000000000000000000001110000 '
b00000000000000000000000001101100 (
b00000000000000000000000001101100 5
b00000000000000000000000001101000 6
b00000000000000000000000001101000 7
b00000000000000000000000001101000 :
b00000000000000000000000001100100 >
b00000000000000000000000001110000 _
b00000000000000000000000001110100 `
12!
b00000000000000000000000001110100 8!
#70
02!
#71
b00000000000000000000000001110100 '
b00000000000000000000000001110000 (
b00000000000000000000000001110000 5
b00000000000000000000000001101100 6
b00000000000000000000000001101100 7
b00000000000000000000000001101100 :
b00000000000000000000000001101000 >
b00000000000000000000000001110100 _
b00000000000000000000000001111000 `
12!
b00000000000000000000000001111000 8!
#72
02!
#73
b00000000000000000000000001111000 '
b00000000000000000000000001110100 (
b00000000000000000000000001110100 5
b00000000000000000000000001110000 6
b00000000000000000000000001110000 7
b00000000000000000000000001110000 :
b00000000000000000000000001101100 >
b00000000000000000000000001111000 _
b00000000000000000000000001111100 `
12!
b00000000000000000000000001111100 8!
#74
02!
#75
b00000000000000000000000001111100 '
b00000000000000000000000001111000 (
b00000000000000000000000001111000 5
b00000000000000000000000001110100 6
b00000000000000000000000001110100 7
b00000000000000000000000001110100 :
b00000000000000000000000001110000 >
b00000000000000000000000001111100 _
b00000000000000000000000010000000 `
12!
b00000000000000000000000010000000 8!
#76
02!
#77
b00000000000000000000000010000000 '
b00000000000000000000000001111100 (
b00000000000000000000000001111100 5
b00000000000000000000000001111000 6
b00000000000000000000000001111000 7
b00000000000000000000000001111000 :
b00000000000000000000000001110100 >
b00000000000000000000000010000000 _
b00000000000000000000000010000100 `
12!
b00000000000000000000000010000100 8!
#78
02!
#79
b00000000000000000000000010000100 '
b00000000000000000000000010000000 (
b00000000000000000000000010000000 5
b00000000000000000000000001111100 6
b00000000000000000000000001111100 7
b00000000000000000000000001111100 :
b00000000000000000000000001111000 >
b00000000000000000000000010000100 _
b00000000000000000000000010001000 `
12!
b00000000000000000000000010001000 8!
#80
02!
#81
b00000000000000000000000010001000 '
b00000000000000000000000010000100 (
b00000000000000000000000010000100 5
b00000000000000000000000010000000 6
b00000000000000000000000010000000 7
b00000000000000000000000010000000 :
b00000000000000000000000001111100 >
b00000000000000000000000010001000 _
b00000000000000000000000010001100 `
12!
b00000000000000000000000010001100 8!
#82
02!
#83
b00000000000000000000000010001100 '
b00000000000000000000000010001000 (
b00000000000000000000000010001000 5
b00000000000000000000000010000100 6
b00000000000000000000000010000100 7
b00000000000000000000000010000100 :
b00000000000000000000000010000000 >
b00000000000000000000000010001100 _
b00000000000000000000000010010000 `
12!
b00000000000000000000000010010000 8!
#84
02!
#85
b00000000000000000000000010010000 '
b00000000000000000000000010001100 (
b00000000000000000000000010001100 5
b00000000000000000000000010001000 6
b00000000000000000000000010001000 7
b00000000000000000000000010001000 :
b00000000000000000000000010000100 >
b00000000000000000000000010010000 _
b00000000000000000000000010010100 `
12!
b00000000000000000000000010010100 8!
#86
02!
#87
b00000000000000000000000010010100 '
b00000000000000000000000010010000 (
b00000000000000000000000010010000 5
b00000000000000000000000010001100 6
b00000000000000000000000010001100 7
b00000000000000000000000010001100 :
b00000000000000000000000010001000 >
b00000000000000000000000010010100 _
b00000000000000000000000010011000 `
12!
b00000000000000000000000010011000 8!
#88
02!
#89
b00000000000000000000000010011000 '
b00000000000000000000000010010100 (
b00000000000000000000000010010100 5
b00000000000000000000000010010000 6
b00000000000000000000000010010000 7
b00000000000000000000000010010000 :
b00000000000000000000000010001100 >
b00000000000000000000000010011000 _
b00000000000000000000000010011100 `
12!
b00000000000000000000000010011100 8!
#90
02!
#91
b00000000000000000000000010011100 '
b00000000000000000000000010011000 (
b00000000000000000000000010011000 5
b00000000000000000000000010010100 6
b00000000000000000000000010010100 7
b00000000000000000000000010010100 :
b00000000000000000000000010010000 >
b00000000000000000000000010011100 _
b00000000000000000000000010100000 `
12!
b00000000000000000000000010100000 8!
#92
02!
#93
b00000000000000000000000010100000 '
b00000000000000000000000010011100 (
b00000000000000000000000010011100 5
b00000000000000000000000010011000 6
b00000000000000000000000010011000 7
b00000000000000000000000010011000 :
b00000000000000000000000010010100 >
b00000000000000000000000010100000 _
b00000000000000000000000010100100 `
12!
b00000000000000000000000010100100 8!
#94
02!
#95
b00000000000000000000000010100100 '
b00000000000000000000000010100000 (
b00000000000000000000000010100000 5
b00000000000000000000000010011100 6
b00000000000000000000000010011100 7
b00000000000000000000000010011100 :
b00000000000000000000000010011000 >
b00000000000000000000000010100100 _
b00000000000000000000000010101000 `
12!
b00000000000000000000000010101000 8!
#96
02!
#97
b00000000000000000000000010101000 '
b00000000000000000000000010100100 (
b00000000000000000000000010100100 5
b00000000000000000000000010100000 6
b00000000000000000000000010100000 7
b00000000000000000000000010100000 :
b00000000000000000000000010011100 >
b00000000000000000000000010101000 _
b00000000000000000000000010101100 `
12!
b00000000000000000000000010101100 8!
#98
02!
#99
b00000000000000000000000010101100 '
b00000000000000000000000010101000 (
b00000000000000000000000010101000 5
b00000000000000000000000010100100 6
b00000000000000000000000010100100 7
b00000000000000000000000010100100 :
b00000000000000000000000010100000 >
b00000000000000000000000010101100 _
b00000000000000000000000010110000 `
12!
b00000000000000000000000010110000 8!
